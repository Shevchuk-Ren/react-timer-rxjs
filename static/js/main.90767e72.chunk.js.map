{"version":3,"sources":["components/Container/Container.jsx","components/Timer/Timer.jsx","components/Buttons/Buttons.jsx","components/App/App.js","index.js"],"names":["Container","children","className","Timer","sec","min","hours","Buttons","status","onStart","onStop","onReset","onWait","startId","useRef","uuidv4","type","onClick","App","useState","time","setTime","timerOn","setTimerOn","counter","setCounter","milliseconds","interval","pipe","startWith","scan","useEffect","startCounter","subscribe","unsubscribe","Math","floor","slice","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOASeA,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAU,QAAf,SAAwBD,KCiC7CE,EAjCD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACzB,OACE,gCACE,sBAAKJ,UAAU,QAAf,UACE,uBAAMA,UAAU,QAAQ,gBAAxB,UACGI,EADH,OAGA,sBAAMJ,UAAU,QAAhB,sBAGF,sBAAKA,UAAU,QAAf,UACE,uBAAMA,UAAU,QAAQ,kBAAxB,UACGG,EADH,OAGA,sBAAMH,UAAU,QAAhB,wBAGF,sBAAKA,UAAU,QAAf,UACE,sBAAMA,UAAU,QAAQ,kBAAxB,SACGE,IAEH,sBAAMF,UAAU,QAAhB,4B,QCwBOK,EA5CC,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC7CC,EAAUC,iBAAOC,eACRD,iBAAOC,eACND,iBAAOC,eACRD,iBAAOC,eAEtB,OACE,+BACIP,EAOA,6BACE,wBAAQQ,KAAK,SAASC,QAASP,EAA/B,mBADM,KANR,6BACE,wBAAQM,KAAK,SAASC,QAASR,EAA/B,oBADOI,GAaX,6BACE,wBAAQG,KAAK,SAASC,QAASN,EAA/B,oBADM,KAKR,6BACE,wBAAQK,KAAK,SAASC,QAASL,EAA/B,mBADM,S,MC0CCM,MAlEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAeC,YAAS,IAAIC,KAChCC,YAAUT,GACVU,aAAK,SAAAV,GAAI,OAAIA,EAAO,MAGtBW,qBAAU,WACR,GAAIT,EAAS,CACX,IAAMU,EAAeN,EAAaO,UAAUZ,GAC5C,OAAO,kBAAMW,EAAaE,kBAE3B,CAACZ,EAASI,IAEb,IA8BIpB,GAAS,IAAM6B,KAAKC,MAAOhB,EAAO,KAAS,KAAKiB,OAAO,GACvDhC,GAAO,IAAM8B,KAAKC,MAAOhB,EAAO,IAAQ,KAAKiB,OAAO,GACpDjC,GAAO,IAAM+B,KAAKC,MAAOhB,EAAO,IAAO,KAAKiB,OAAO,GAEvD,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAOjC,IAAKA,EAAKC,IAAKA,EAAKC,MAAOA,IAElC,cAAC,EAAD,CACEG,QAvCQ,WACZiB,EAAaO,UAAUV,GAAW,KAuC9Bb,OApCO,WACXgB,EAAaO,UAAUV,GAAW,IAClCF,EAAQ,IAmCJV,QApBQ,WACZe,EAAaO,UAAUV,GAAW,IAClCF,EAAQ,GAERiB,YAAW,WACTZ,EAAaO,UAAUV,GAAW,MACjC,MAeCX,OAjCO,WACXa,EAAWD,EAAU,GAErBc,YAAW,WACTb,EAAW,KACV,KACa,IAAZD,IACFE,EAAaO,UAAUV,GAAW,IAClCF,EAAQD,KA0BNZ,OAAQc,QC9DhBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90767e72.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => <div className=\"timer\">{children}</div>;\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Timer = ({ sec, min, hours }) => {\n  return (\n    <div>\n      <div className=\"field\">\n        <span className=\"value\" data-hours>\n          {hours}:\n        </span>\n        <span className=\"label\">Hours</span>\n      </div>\n\n      <div className=\"field\">\n        <span className=\"value\" data-minutes>\n          {min}:\n        </span>\n        <span className=\"label\">Minutes</span>\n      </div>\n\n      <div className=\"field\">\n        <span className=\"value\" data-seconds>\n          {sec}\n        </span>\n        <span className=\"label\">Seconds</span>\n      </div>\n    </div>\n  );\n};\n\nTimer.propTypes = {\n  hours: PropTypes.string.isRequired,\n  min: PropTypes.string.isRequired,\n  sec: PropTypes.string.isRequired,\n};\n\nexport default Timer;\n","import React, { useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nconst Buttons = ({ status, onStart, onStop, onReset, onWait }) => {\n  const startId = useRef(uuidv4());\n  const stopId = useRef(uuidv4());\n  const resetId = useRef(uuidv4());\n  const waitId = useRef(uuidv4());\n\n  return (\n    <ul>\n      {!status ? (\n        <li key={startId}>\n          <button type=\"button\" onClick={onStart}>\n            Start\n          </button>\n        </li>\n      ) : (\n        <li key=\"1\">\n          <button type=\"button\" onClick={onStop}>\n            Stop\n          </button>\n        </li>\n      )}\n\n      <li key=\"3\">\n        <button type=\"button\" onClick={onReset}>\n          Reset\n        </button>\n      </li>\n      <li key=\"4\">\n        <button type=\"button\" onClick={onWait}>\n          Wait\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nButtons.propTypes = {\n  onStart: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  onWait: PropTypes.func.isRequired,\n  status: PropTypes.bool.isRequired,\n};\n\nexport default Buttons;\n","import { useState, useEffect } from 'react';\nimport { interval, startWith, scan } from 'rxjs';\nimport Container from '../Container';\nimport Timer from '../Timer';\nimport Buttons from '../Buttons';\nimport './App.css';\n\nfunction App() {\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  const [counter, setCounter] = useState(0);\n\n  const milliseconds = interval(10).pipe(\n    startWith(time),\n    scan(time => time + 1),\n  );\n\n  useEffect(() => {\n    if (timerOn) {\n      const startCounter = milliseconds.subscribe(setTime);\n      return () => startCounter.unsubscribe();\n    }\n  }, [timerOn, milliseconds]);\n\n  const start = () => {\n    milliseconds.subscribe(setTimerOn(true));\n  };\n\n  const stop = () => {\n    milliseconds.subscribe(setTimerOn(false));\n    setTime(0);\n  };\n\n  const wait = () => {\n    setCounter(counter + 1);\n\n    setTimeout(() => {\n      setCounter(0);\n    }, 300);\n    if (counter === 1) {\n      milliseconds.subscribe(setTimerOn(false));\n      setTime(time);\n    }\n  };\n\n  const reset = () => {\n    milliseconds.subscribe(setTimerOn(false));\n    setTime(0);\n\n    setTimeout(() => {\n      milliseconds.subscribe(setTimerOn(true));\n    }, 300);\n  };\n\n  let hours = ('0' + Math.floor((time / 3.6e6) % 24)).slice(-2);\n  let min = ('0' + Math.floor((time / 1000) % 60)).slice(-2);\n  let sec = ('0' + Math.floor((time / 100) % 60)).slice(-2);\n\n  return (\n    <Container>\n      <Timer sec={sec} min={min} hours={hours}></Timer>\n\n      <Buttons\n        onStart={start}\n        onStop={stop}\n        onReset={reset}\n        onWait={wait}\n        status={timerOn}\n      ></Buttons>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}